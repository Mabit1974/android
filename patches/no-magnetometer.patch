From 088f993f357d17dc038a3ba102aeb491db3875c4 Mon Sep 17 00:00:00 2001
From: gmarkall <grm08@doc.ic.ac.uk>
Date: Fri, 18 May 2012 21:18:48 +0100
Subject: [PATCH] SensorService: Don't always assume magnetometer is present.

The Android 2.3 CDD doesn't mandate that a magnetometer is
present. However, the sensor service always assumes that it is
present, which leads to crashes on devices without one when the
RotationVectorSensor is accessed (such as the Lenovo Ideapad A1).

This commit re-works the sensor service so that it only creates
virtual sensors when the physical sensors that compose them
actually exist.
---
 services/sensorservice/SensorService.cpp | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/services/sensorservice/SensorService.cpp b/services/sensorservice/SensorService.cpp
index 697e879..3a6be1c 100644
--- a/services/sensorservice/SensorService.cpp
+++ b/services/sensorservice/SensorService.cpp
@@ -57,13 +57,24 @@ void SensorService::onFirstRef()
     SensorDevice& dev(SensorDevice::getInstance());

     if (dev.initCheck() == NO_ERROR) {
-        uint32_t virtualSensorsNeeds =
-                (1<<SENSOR_TYPE_GRAVITY) |
-                (1<<SENSOR_TYPE_LINEAR_ACCELERATION) |
-                (1<<SENSOR_TYPE_ROTATION_VECTOR);
         sensor_t const* list;
         int count = dev.getSensorList(&list);
         mLastEventSeen.setCapacity(count);
+
+        uint32_t hasSensors = 0;
+        for (int i=0 ; i<count ; i++) {
+            hasSensors |= (1<<list[i].type);
+        }
+
+        uint32_t virtualSensorsNeeds = 0;
+        if ((hasSensors & (1<<SENSOR_TYPE_ACCELEROMETER))) {
+            virtualSensorsNeeds &= (1<<SENSOR_TYPE_GRAVITY);
+            virtualSensorsNeeds &= (1<<SENSOR_TYPE_LINEAR_ACCELERATION);
+            if ((hasSensors & (1<<SENSOR_TYPE_MAGNETIC_FIELD))) {
+                virtualSensorsNeeds &= (1<<SENSOR_TYPE_ROTATION_VECTOR);
+            }
+        }
+
         for (int i=0 ; i<count ; i++) {
             registerSensor( new HardwareSensor(list[i]) );
             switch (list[i].type) {
